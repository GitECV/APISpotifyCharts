// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using spotifychartsAPI.Data;

#nullable disable

namespace spotifychartsAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("spotifychartsAPI.Models.Charts", b =>
                {
                    b.Property<int>("iIdInsertion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iIdInsertion"), 1L, 1);

                    b.Property<DateTime>("dtDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtFirstEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("iChartPosition")
                        .HasColumnType("int");

                    b.Property<int?>("iFirstEntryPosition")
                        .HasColumnType("int");

                    b.Property<int?>("iPeak")
                        .HasColumnType("int");

                    b.Property<int?>("iStreak")
                        .HasColumnType("int");

                    b.Property<int>("iStreams")
                        .HasColumnType("int");

                    b.Property<int?>("iTotalDaysOnChart")
                        .HasColumnType("int");

                    b.Property<string>("sArtistName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("sIdSong")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("sPlaylist")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sPrevPosition")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("sSongName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("iIdInsertion");

                    b.ToTable("GlobalDailyChart");
                });
#pragma warning restore 612, 618
        }
    }
}
